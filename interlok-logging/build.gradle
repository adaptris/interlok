ext {
  componentName='Interlok Core/Logging'
  componentDesc="Custom JMX Logger for Interlok for use with the UI"
  delombokTargetDir = new File("${project.projectDir}/src/main/generated")
  log4j2Version = "2.22.1"
}

// In this section you declare the dependencies for your production and test code
dependencies {
  api "org.apache.logging.log4j:log4j-core:$log4j2Version", optional
  api "org.apache.logging.log4j:log4j-api:$log4j2Version", optional
  annotationProcessor ("org.apache.logging.log4j:log4j-api:$log4j2Version")
  annotationProcessor ("org.apache.logging.log4j:log4j-core:$log4j2Version")

  javadoc project(':interlok-core-apt')

  testImplementation ("org.junit.jupiter:junit-jupiter-api:5.10.1")
  testImplementation ("org.junit.jupiter:junit-jupiter-engine:5.10.1")
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar
    archives sourcesJar
}


task deleteGeneratedFiles(type: Delete) {
  delete delombokTargetDir
}


javadoc {
  configure(options) {
    options.addStringOption "tagletpath", configurations.javadoc.asPath
    options.addStringOption "Xdoclint:none", "-quiet"
    options.tags('apiNote:a:API Note:', 'implSpec:a:Implementation Requirements:','implNote:a:Implementation Note:')
    title= componentName
  }
}

delombok {
  target = delombokTargetDir
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java

      artifact javadocJar { classifier "javadoc" }
      artifact sourcesJar { classifier "sources" }
      pom.withXml {
        asNode().appendNode("name", componentName)
        asNode().appendNode("description", componentDesc)
        asNode().appendNode("url", "https://interlok.adaptris.net/interlok-docs/#/")
        def properties = asNode().appendNode("properties")
        properties.appendNode("target", "3.8.0+")
        properties.appendNode("license", "false")
        properties.appendNode("readme", "https://github.com/adaptris/interlok/raw/develop/README.md")
        properties.appendNode("repository", "https://github.com/adaptris/interlok")
      }
    }
  }
  repositories {
    maven {
      credentials {
        username repoUsername
        password repoPassword
      }
      url mavenPublishUrl
    }
  }
}

clean.dependsOn deleteGeneratedFiles
