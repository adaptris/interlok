ext {
  componentName='Interlok Logging'
  delombokTargetDir = new File("${project.projectDir}/src/main/generated")
  log4j2Version = "2.21.0"
}

// In this section you declare the dependencies for your production and test code
dependencies {
  compile "org.apache.logging.log4j:log4j-core:$log4j2Version", optional
  compile "org.apache.logging.log4j:log4j-api:$log4j2Version", optional
  annotationProcessor ("org.apache.logging.log4j:log4j-api:$log4j2Version")
  annotationProcessor ("org.apache.logging.log4j:log4j-core:$log4j2Version")

  javadoc project(':interlok-core-apt')

  testCompile ("junit:junit:4.13.1")

}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
}


task deleteGeneratedFiles(type: Delete) {
  delete delombokTargetDir
}


javadoc {
  configure(options) {
    taglets = ["com.adaptris.taglet.ConfigTaglet", "com.adaptris.taglet.LicenseTaglet"]
    options.addStringOption "tagletpath", configurations.javadoc.asPath
    options.tags('apiNote:a:API Note:', 'implSpec:a:Implementation Requirements:','implNote:a:Implementation Note:')
    title= componentName
  }
}

delombok {
  target = delombokTargetDir
}

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: mavenPublishUrl) {
        authentication(userName: repoUsername, password: repoPassword)
      }
      configuration = configurations.mavenDeploy
      pom.withXml {
        asNode().appendNode("description", "Custom JMX Logger for Interlok")
        def properties = asNode().appendNode("properties")
        properties.appendNode("target", "3.8.0+")
        properties.appendNode("license", "false")
        properties.appendNode("url", "https://interlok.adaptris.net/interlok-docs/#/")
        properties.appendNode("readme", "https://github.com/adaptris/interlok/raw/develop/README.md")
        properties.appendNode("repository", "https://github.com/adaptris/interlok")        
      }

    }
  }
}

publish.dependsOn uploadArchives
clean.dependsOn deleteGeneratedFiles
