ext {
  componentName='Interlok Annotation Support'
  delombokTargetDir = new File("${project.projectDir}/src/main/generated")
}

dependencies {
  compile ("com.thoughtworks.xstream:xstream:1.4.15") {  transitive= false }
  compile ("jakarta.validation:jakarta.validation-api:2.0.2")
  compile files("${System.getProperty('java.home')}/../lib/tools.jar")

  testCompile("junit:junit:4.13.1")
  testCompile("org.hibernate.validator:hibernate-validator:6.1.7.Final")
  testCompile("org.glassfish:javax.el:3.0.1-b12")
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
}


javadoc {
  configure(options) {
    options.tags('apiNote:a:API Note:', 'implSpec:a:Implementation Requirements:','implNote:a:Implementation Note:')
    title= componentName
  }
}

task deleteGeneratedFiles(type: Delete) {
  delete delombokTargetDir
}

delombok {
  target = delombokTargetDir
}


uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: mavenPublishUrl) {
        authentication(userName: repoUsername, password: repoPassword)
      }
      configuration = configurations.mavenDeploy
      pom.withXml {
        asNode().appendNode("description", "Custom annotations for Interlok")
        def properties = asNode().appendNode("properties")
        properties.appendNode("target", "3.8.0+")
        properties.appendNode("tags", "annotations")
        properties.appendNode("license", "false")
      }

    }
  }
}

publish.dependsOn uploadArchives
clean.dependsOn deleteGeneratedFiles
